<?php
/**
 * Created by PhpStorm.
 * User: nikolay
 * Date: 17.07.18
 * Time: 12:41
 */

namespace pps\zotapay\ZotaPayApi\Requests\card;

use pps\zotapay\ZotaPayApi\Requests\BaseRequest;

/**
 * Merchant order identifier. Mandatory. 128/String
 * @property string $client_orderid
 *
 * Brief order description Mandatory. 64k/String
 * @property string $order_desc
 *
 * Customer’s first name Mandatory. 50/String
 * @property string $first_name
 *
 * Customer’s last name Mandatory. 50/String
 * @property string $last_name
 *
 * Last four digits of the customer’s social security number. Optional. 4/Numeric
 * @property int $ssn
 *
 * Customer’s date of birth, in the format YYYYMMDD. Optional. 8/Numeric
 * @property int $birthday
 *
 * Customer’s address line 1. Mandatory. 50/String
 * @property string $address1
 *
 * Customer’s city. Mandatory. 50/String
 * @property string $city
 *
 * Customer’s state (two-letter state code). Please see Reference for a list of valid state codes. Conditional. 2/String
 * @property string $state
 *
 * Customer’s ZIP code Mandatory. 10/String
 * @property string $zip_code
 *
 * Customer’s country(two-letter country code). Please see Reference for a list of valid country codes.
 * Mandatory. 2/String
 * @property string $country
 *
 * Customer’s full international phone number, including country code. Mandatory. 15/String
 * @property string $phone
 *
 * Customer’s full international cell phone number, including country code. Optional. 15/String
 * @property string $cell_phone
 *
 * Customer’s email address. Mandatory. 50/String
 * @property string $email
 *
 * Amount to be charged. The amount has to be specified in the highest units with . delimiter. 10.5 for USD
 * means 10 US Dollars and 50 Cents Mandatory. 10/Numeric
 * @property int $amount
 *
 * Currency the transaction is charged in (three-letter currency code). Sample values are:
 * USD for US Dollar EUR for European Euro Mandatory. 3/String
 * @property string $currency
 *
 * Customer’s IP address, included for fraud screening purposes. Mandatory. 20/String
 * @property string $ipaddress
 *
 * URL the original sale is made from. Optional. 128/String
 * @property string $site_url
 *
 * Checksum generated by SHA-1. See Request authorization through control parameter for more details.
 * Mandatory. 40/String
 * @property string $control
 *
 * URL the cardholder will be redirected to upon completion of the transaction.
 * Please note that the cardholder will be redirected in any case, no matter whether
 * the transaction is approved or declined. You should not use this parameter to retrieve results from Zotapay gateway,
 * because all parameters go through client’s browser and can be lost during transmission.
 * To deliver the correct payment result to your backend use server_callback_url instead. Mandatory. 128/String
 * @property string $redirect_url
 *
 * URL the transaction result will be sent to. Merchant may use this URL for custom processing of the transaction
 * completion, e.g. to collect sales data in Merchant’s database. See more details at Merchant Callbacks
 * Optional. 128/String
 * @property string $server_callback_url
 *
 * Customer’s two-letter language code for multi-language payment forms Optional. 2/String
 * @property string $preferred_language
 */
class CardOrderRequest extends BaseRequest
{
    public $client_orderid;
    public $order_desc;
    public $first_name;
    public $last_name;
    public $ssn;
    public $birthday;
    public $address1;
    public $city;
    public $state;
    public $zip_code;
    public $country;
    public $phone;
    public $cell_phone;
    public $email;
    public $amount;
    public $currency;
    public $ipaddress;
    public $site_url;
    public $control;
    public $redirect_url;
    public $server_callback_url;
    public $preferred_language;


    public function rules()
    {
        return [
            [$this->mandatoryFields, 'required'],
            [
                [
                    'client_orderid',
                    'site_url',
                    'redirect_url',
                    'server_callback_url',

                ],
                'string',
                'max' => 128
            ],
            [
                [
                    'first_name',
                    'last_name',
                    'address1',
                    'city',
                    'email',
                ],
                'string',
                'max' => 50
            ],
            ['amount', 'number', 'max' => 10],
            ['zip_code', 'string', 'max' => 10],
            [['phone', 'cell_phone'], 'string', 'max' => 15],
            [['country', 'preferred_language', 'state'], 'string', 'min' => 2, 'max' => 2],
            ['ipaddress', 'string', 'min' => 7, 'max' => 20],
            ['currency', 'string', 'min' => 3, 'max' => 3],
            [['ssn'], 'number', 'min' => 4, 'max' => 4],
            ['control', 'string', 'max' => 40],
            [['order_desc'], 'string'],
            ['birthday', 'number', 'min' => 8, 'max' => 8],
        ];
    }

    protected $mandatoryFields = [
// requisites
        'first_name',
        'last_name',
        'address1',
        'city',
        'zip_code',
        'country',
        'phone',
        'email',
        'ipaddress',

        'amount',
        'currency',
        'control',
        'redirect_url',
        'client_orderid',
        'order_desc',
    ];

    //заполняем поле с контрольной суммой
    public function beforeValidate()
    {
        $stringToSign = $this->conf->getEndpointId()
            . $this->client_orderid
            . $this->amount * 100
            . $this->email
            . $this->conf->getControlKey();
        $checkSum = sha1($stringToSign);
        $this->control = $checkSum;
        return parent::beforeValidate();
    }
}
